# RUFF configuration file
# see: https://docs.astral.sh/ruff/settings
#      https://docs.astral.sh/ruff/rules
line-length  = 99
indent-width = 4
src          = ["src", "tests"]            # ["."]
exclude      = ['docs/conf.py', 'typings']
builtins     = ["_i"]                      # ipython hidden variable
fix          = false

[format]
preview                   = true
quote-style               = "double"
indent-style              = "space"
skip-magic-trailing-comma = false

[lint]
preview = true
task-tags = ["TODO", "FIXME", "BUG", "HACK", "XXX", "[ ]", "[*]"]
unfixable = ["F401"] # Disable fix for unused imports (`F401`)
select = ['ALL']
ignore = [
  'ANN',     # flake8-annotations
  'PD',      # panda-vet
  'COM812',  # missing trailing comma
  'COM819',  # prohibited-trailing-comma
  'D105',    # undocumented-magic-method
  'D106',    # undocumented-public-nested-class
  'D107',    # undocumented-public-init
  'TRY003',  # raise-vanilla-args
  'FBT002',  # boolean-default-value-positional-argument
  'FBT001',  # Boolean-typed positional argument in function definition
  'PLR0913', # Too many arguments in function definition ({c_args} > {max_args})
  'ERA001',  # commented code
  'S404',    # subprocess is evil
  'TD001',   # todo format
  'TD002',   # todo format
  'TD003',   # todo format
  'PT013',   # Found incorrect import of pytest
  'SLF001',  # Private member accessed
  'PLC2701', # import-private-name
  'PLW3201', # Bad or misspelled dunder method name
]

[lint.per-file-ignores]
"tests/**.py" = [
  "T20",    # Allow print statements in tests
  "D",      # Ignore docstring rules in tests
  "ANN",    # Ignore type annotations in tests
  "S101",   # Yeah of course we assert in tests
  "B009",   # Allow calling `getattr` in tests since it can be used to make the test clearer.
  "CPY001", # missing copyright
]

[lint.isort]
lines-after-imports    = 2
required-imports       = ["from __future__ import annotations"]
extra-standard-library = ["tomllib"]

[lint.pydocstyle]
convention          = "google"
ignore-decorators   = ["typing.overload"]
property-decorators = ["gi.repository.GObject.Property"]

[lint.pylint]
allow-magic-value-types = ["int", "str"]

[lint.mccabe]
max-complexity = 12
